import type { FormEntry } from "./types";
import {
    arrayChoice,
    email,
    textArea,
    validString,
    validYear,
} from "../../../../backend/zod";
import Axios from "../../axios";

const good = ["Outstanding", "Very Good", "Good", "Average", "Poor"] as const;
const score = ["1", "2", "3", "4", "5"] as const;

const StudentTeachingFeedbackForm: FormEntry[] = [
    {
        title: "Email",
        name: "email_id",
        type: "email",
        required: true,
        validator: email,
        page: 1,
        fieldsPerLine: 2,
    },
    {
        title: "Batch Year",
        name: "student_batch_year",
        type: "text",
        required: true,
        validator: validYear,
        page: 1,
        fieldsPerLine: 2,
    },
    {
        title: "Class / Division",
        name: "student_class_and_division",
        type: "text",
        required: true,
        validator: validString,
        page: 1,
        fieldsPerLine: 1,
    },
    {
        title: "Name of the teacher to be evaluated",
        name: "teacher_name",
        type: "dropdown",
        dropOpt: "multiple",
        dropdownHiddenItem: "Select Name of the Nominee",
        required: true,
        validator: validString,
        options: [],
        page: 2,
        fieldsPerLine: 2,
    },
    {
        title: "Designation",
        name: "teacher_designation",
        type: "text",
        required: true,
        validator: validString,
        page: 2,
        fieldsPerLine: 2,
    },
    {
        title: "Subject Taught",
        name: "teaching_subject",
        type: "text",
        required: true,
        validator: validString,

        page: 2,
        fieldsPerLine: 1,
    },
    {
        title: "Knowledge base of the teacher (as perceived by you)",
        type: "radio",
        required: true,
        name: "q_01",

        validator: arrayChoice(good),
        options: good,
        page: 3,
        fieldsPerLine: 1,
    },
    {
        title: "Communication skills (in terms of articulation and comprehensibility)",
        type: "radio",
        required: true,
        name: "q_02",

        validator: arrayChoice(good),
        options: good,
        page: 3,
        fieldsPerLine: 1,
    },
    {
        title: "Sincerity/ Commitment of the teacher",
        type: "radio",
        required: true,
        name: "q_03",

        validator: arrayChoice(score),
        options: score,
        page: 3,
        fieldsPerLine: 1,
    },
    {
        title: "Punctuality of the teacher (whether the class starts on time)",
        type: "radio",
        required: true,
        name: "q_04",

        validator: arrayChoice(score),
        options: score,
        page: 3,
        fieldsPerLine: 1,
    },
    {
        title: "Interest generated by the teacher",
        type: "radio",
        required: true,
        name: "q_05",

        validator: arrayChoice(score),
        options: score,
        page: 3,
        fieldsPerLine: 1,
    },
    {
        title: "Ability to integrate course material with environment/other issues, to provide a broader perspective",
        type: "radio",
        required: true,
        name: "q_06",

        validator: arrayChoice(good),
        options: good,
        page: 3,
        fieldsPerLine: 1,
    },
    {
        title: "Ability to integrate content with other courses",
        type: "radio",
        required: true,
        name: "q_07",

        validator: arrayChoice(good),
        options: good,
        page: 3,
        fieldsPerLine: 1,
    },
    {
        title: "Accessibility of the teacher in and out of the class (includes availability of the teacher to motivate further study and discussion outside class)",
        type: "radio",
        required: true,
        name: "q_08",

        validator: arrayChoice(score),
        options: score,
        page: 3,
        fieldsPerLine: 1,
    },
    {
        title: "Ability to design quizzes/tests/assignments/examinations and projects to evaluate students understanding of the course",
        type: "radio",
        required: true,
        name: "q_09",

        validator: arrayChoice(good),
        options: good,
        page: 3,
        fieldsPerLine: 1,
    },
    {
        title: "Does the teacher use I.C.T",
        type: "radio",
        required: true,
        name: "q_10",
        validator: arrayChoice(["Yes", "No"]),
        options: ["Yes", "No"] as const,
        page: 3,
        fieldsPerLine: 1,
    },
    {
        title: "Overall rating ",
        type: "radio",
        required: true,
        name: "q_11",

        validator: arrayChoice(good),
        options: good,
        page: 3,
        fieldsPerLine: 1,
    },
    {
        title: "Give 3 reasons for nominating the teacher for the award (300 words max)",
        type: "textarea",
        required: true,
        name: "nominating_reasons",
        validator: textArea({ maxLength: 300 }),
        page: 4,
        fieldsPerLine: 1,
    },
];

async function fetchNominatedNames() {
    console.log(Axios.defaults.baseURL);
    try {
        // Make an HTTP request to fetch the data from your backend
        // const response = await  Axios.get('http://localhost:5001/ieac/data/nominated-faculty-names',{
        const response = await Axios.get("/ieac/data/nominated-faculty-names", {
            headers: {
                "x-access-token": localStorage.getItem("token"),
                "x-user-id": localStorage.getItem("user_id"),
                "x-institute-name": localStorage.getItem("institution"),
            },
        });

        // Assuming the backend returns an array of nominated names
        const nominatedNames = response.data.data;

        // Update the options for "nominee_name"
        StudentTeachingFeedbackForm.find(
            (field) => field._name === "teacher_name"
        ).options = nominatedNames;
    } catch (error) {
        console.error("Error fetching nominated names:", error);
    }
}

// Call the function to fetch and update the options
fetchNominatedNames();

export default StudentTeachingFeedbackForm;
